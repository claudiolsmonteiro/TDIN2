//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StoreGUI.StoreService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StoreService.IStoreService")]
    public interface IStoreService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetAllBooks", ReplyAction="http://tempuri.org/IStoreService/GetAllBooksResponse")]
        string[][] GetAllBooks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetAllBooks", ReplyAction="http://tempuri.org/IStoreService/GetAllBooksResponse")]
        System.Threading.Tasks.Task<string[][]> GetAllBooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetBook", ReplyAction="http://tempuri.org/IStoreService/GetBookResponse")]
        string[] GetBook(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetBook", ReplyAction="http://tempuri.org/IStoreService/GetBookResponse")]
        System.Threading.Tasks.Task<string[]> GetBookAsync(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetAllOrders", ReplyAction="http://tempuri.org/IStoreService/GetAllOrdersResponse")]
        string[][] GetAllOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetAllOrders", ReplyAction="http://tempuri.org/IStoreService/GetAllOrdersResponse")]
        System.Threading.Tasks.Task<string[][]> GetAllOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetOrders", ReplyAction="http://tempuri.org/IStoreService/GetOrdersResponse")]
        string[][] GetOrders(string client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetOrders", ReplyAction="http://tempuri.org/IStoreService/GetOrdersResponse")]
        System.Threading.Tasks.Task<string[][]> GetOrdersAsync(string client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetStock", ReplyAction="http://tempuri.org/IStoreService/GetStockResponse")]
        int GetStock(string book_title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetStock", ReplyAction="http://tempuri.org/IStoreService/GetStockResponse")]
        System.Threading.Tasks.Task<int> GetStockAsync(string book_title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/MakeaSell", ReplyAction="http://tempuri.org/IStoreService/MakeaSellResponse")]
        void MakeaSell(string client_name, string client_email, string client_addr, string book_title, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/MakeaSell", ReplyAction="http://tempuri.org/IStoreService/MakeaSellResponse")]
        System.Threading.Tasks.Task MakeaSellAsync(string client_name, string client_email, string client_addr, string book_title, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/CreateStoreOrder", ReplyAction="http://tempuri.org/IStoreService/CreateStoreOrderResponse")]
        System.Guid CreateStoreOrder(string client_name, string client_email, string client_addr, string book_title, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/CreateStoreOrder", ReplyAction="http://tempuri.org/IStoreService/CreateStoreOrderResponse")]
        System.Threading.Tasks.Task<System.Guid> CreateStoreOrderAsync(string client_name, string client_email, string client_addr, string book_title, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/ConfirmSell", ReplyAction="http://tempuri.org/IStoreService/ConfirmSellResponse")]
        void ConfirmSell(string client_name, string book_title, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/ConfirmSell", ReplyAction="http://tempuri.org/IStoreService/ConfirmSellResponse")]
        System.Threading.Tasks.Task ConfirmSellAsync(string client_name, string book_title, int quantity);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStoreServiceChannel : StoreGUI.StoreService.IStoreService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StoreServiceClient : System.ServiceModel.ClientBase<StoreGUI.StoreService.IStoreService>, StoreGUI.StoreService.IStoreService {
        
        public StoreServiceClient() {
        }
        
        public StoreServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StoreServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StoreServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StoreServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[][] GetAllBooks() {
            return base.Channel.GetAllBooks();
        }
        
        public System.Threading.Tasks.Task<string[][]> GetAllBooksAsync() {
            return base.Channel.GetAllBooksAsync();
        }
        
        public string[] GetBook(string title) {
            return base.Channel.GetBook(title);
        }
        
        public System.Threading.Tasks.Task<string[]> GetBookAsync(string title) {
            return base.Channel.GetBookAsync(title);
        }
        
        public string[][] GetAllOrders() {
            return base.Channel.GetAllOrders();
        }
        
        public System.Threading.Tasks.Task<string[][]> GetAllOrdersAsync() {
            return base.Channel.GetAllOrdersAsync();
        }
        
        public string[][] GetOrders(string client) {
            return base.Channel.GetOrders(client);
        }
        
        public System.Threading.Tasks.Task<string[][]> GetOrdersAsync(string client) {
            return base.Channel.GetOrdersAsync(client);
        }
        
        public int GetStock(string book_title) {
            return base.Channel.GetStock(book_title);
        }
        
        public System.Threading.Tasks.Task<int> GetStockAsync(string book_title) {
            return base.Channel.GetStockAsync(book_title);
        }
        
        public void MakeaSell(string client_name, string client_email, string client_addr, string book_title, int quantity) {
            base.Channel.MakeaSell(client_name, client_email, client_addr, book_title, quantity);
        }
        
        public System.Threading.Tasks.Task MakeaSellAsync(string client_name, string client_email, string client_addr, string book_title, int quantity) {
            return base.Channel.MakeaSellAsync(client_name, client_email, client_addr, book_title, quantity);
        }
        
        public System.Guid CreateStoreOrder(string client_name, string client_email, string client_addr, string book_title, int quantity) {
            return base.Channel.CreateStoreOrder(client_name, client_email, client_addr, book_title, quantity);
        }
        
        public System.Threading.Tasks.Task<System.Guid> CreateStoreOrderAsync(string client_name, string client_email, string client_addr, string book_title, int quantity) {
            return base.Channel.CreateStoreOrderAsync(client_name, client_email, client_addr, book_title, quantity);
        }
        
        public void ConfirmSell(string client_name, string book_title, int quantity) {
            base.Channel.ConfirmSell(client_name, book_title, quantity);
        }
        
        public System.Threading.Tasks.Task ConfirmSellAsync(string client_name, string book_title, int quantity) {
            return base.Channel.ConfirmSellAsync(client_name, book_title, quantity);
        }
    }
}
